{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._headers = headers;\n    this._baseUrl = baseUrl;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка ${res.status}`);\n  } // _checkResponse(res) {\n  //   !res.ok ? Promise.reject(`Ошибка ${res.status}`) : res.json();\n  // }\n\n\n  getProfile() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  editProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(this._checkResponse);\n  }\n\n  updateAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(this._checkResponse);\n  }\n\n  addCard(name, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  deleteLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  addLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n}\n\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-39',\n  headers: {\n    authorization: '02c148a3-ef23-4baa-b389-8cb95ba5fa76',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"sources":["/Users/Boris/Desktop/Praktikum/mesto-react/src/utils/api.js"],"names":["Api","constructor","baseUrl","headers","_headers","_baseUrl","_checkResponse","res","ok","json","Promise","reject","status","getProfile","fetch","then","getInitialCards","editProfile","name","about","method","body","JSON","stringify","updateAvatar","avatar","addCard","link","deleteCard","id","deleteLike","addLike","api","authorization"],"mappings":"AAAA,MAAMA,GAAN,CAAU;AACRC,EAAAA,WAAW,OAAqB;AAAA,QAApB;AAACC,MAAAA,OAAD;AAAUC,MAAAA;AAAV,KAAoB;AAC9B,SAAKC,QAAL,GAAgBD,OAAhB;AACA,SAAKE,QAAL,GAAgBH,OAAhB;AACD;;AAEDI,EAAAA,cAAc,CAACC,GAAD,EAAM;AAClB,QAAIA,GAAG,CAACC,EAAR,EAAY;AACV,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;;AACD,WAAOC,OAAO,CAACC,MAAR,CAAgB,UAASJ,GAAG,CAACK,MAAO,EAApC,CAAP;AACD,GAXO,CAaR;AACA;AACA;;;AAEAC,EAAAA,UAAU,GAAG;AACX,WAAOC,KAAK,CAAE,GAAE,KAAKT,QAAS,WAAlB,EAA8B;AACxCF,MAAAA,OAAO,EAAE,KAAKC;AAD0B,KAA9B,CAAL,CAGNW,IAHM,CAGD,KAAKT,cAHJ,CAAP;AAID;;AAEDU,EAAAA,eAAe,GAAG;AAChB,WAAOF,KAAK,CAAE,GAAE,KAAKT,QAAS,QAAlB,EAA2B;AACrCF,MAAAA,OAAO,EAAE,KAAKC;AADuB,KAA3B,CAAL,CAGNW,IAHM,CAGD,KAAKT,cAHJ,CAAP;AAID;;AAEDW,EAAAA,WAAW,CAACC,IAAD,EAAOC,KAAP,EAAc;AACvB,WAAOL,KAAK,CAAE,GAAE,KAAKT,QAAS,WAAlB,EAA8B;AACxCe,MAAAA,MAAM,EAAE,OADgC;AAExCjB,MAAAA,OAAO,EAAE,KAAKC,QAF0B;AAGxCiB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACrBL,QAAAA,IADqB;AAErBC,QAAAA;AAFqB,OAAf;AAHkC,KAA9B,CAAL,CAQNJ,IARM,CAQD,KAAKT,cARJ,CAAP;AASD;;AAEDkB,EAAAA,YAAY,CAACC,MAAD,EAAS;AACnB,WAAOX,KAAK,CAAE,GAAE,KAAKT,QAAS,kBAAlB,EAAqC;AAC/Ce,MAAAA,MAAM,EAAE,OADuC;AAE/CjB,MAAAA,OAAO,EAAE,KAAKC,QAFiC;AAG/CiB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACrBE,QAAAA;AADqB,OAAf;AAHyC,KAArC,CAAL,CAONV,IAPM,CAOD,KAAKT,cAPJ,CAAP;AAQD;;AAEDoB,EAAAA,OAAO,CAACR,IAAD,EAAOS,IAAP,EAAY;AACjB,WAAOb,KAAK,CAAE,GAAE,KAAKT,QAAS,QAAlB,EAA2B;AACrCe,MAAAA,MAAM,EAAE,MAD6B;AAErCjB,MAAAA,OAAO,EAAE,KAAKC,QAFuB;AAGrCiB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBL,QAAAA,IADmB;AAEnBS,QAAAA;AAFmB,OAAf;AAH+B,KAA3B,CAAL,CAQNZ,IARM,CAQD,KAAKT,cARJ,CAAP;AASD;;AAEDsB,EAAAA,UAAU,CAACC,EAAD,EAAI;AACZ,WAAOf,KAAK,CAAE,GAAE,KAAKT,QAAS,UAASwB,EAAG,EAA9B,EAAiC;AAC3CT,MAAAA,MAAM,EAAE,QADmC;AAE3CjB,MAAAA,OAAO,EAAE,KAAKC;AAF6B,KAAjC,CAAL,CAINW,IAJM,CAID,KAAKT,cAJJ,CAAP;AAKD;;AAEDwB,EAAAA,UAAU,CAACD,EAAD,EAAI;AACZ,WAAOf,KAAK,CAAE,GAAE,KAAKT,QAAS,UAASwB,EAAG,QAA9B,EAAuC;AACjDT,MAAAA,MAAM,EAAE,QADyC;AAEjDjB,MAAAA,OAAO,EAAE,KAAKC;AAFmC,KAAvC,CAAL,CAINW,IAJM,CAID,KAAKT,cAJJ,CAAP;AAKD;;AAEDyB,EAAAA,OAAO,CAACF,EAAD,EAAI;AACT,WAAOf,KAAK,CAAE,GAAE,KAAKT,QAAS,UAASwB,EAAG,QAA9B,EAAuC;AACjDT,MAAAA,MAAM,EAAE,KADyC;AAEjDjB,MAAAA,OAAO,EAAE,KAAKC;AAFmC,KAAvC,CAAL,CAINW,IAJM,CAID,KAAKT,cAJJ,CAAP;AAKD;;AAxFO;;AA2FV,OAAO,MAAM0B,GAAG,GAAG,IAAIhC,GAAJ,CAAQ;AACzBE,EAAAA,OAAO,EAAE,6CADgB;AAEzBC,EAAAA,OAAO,EAAE;AACP8B,IAAAA,aAAa,EAAE,sCADR;AAEP,oBAAgB;AAFT;AAFgB,CAAR,CAAZ","sourcesContent":["class Api {\n  constructor({baseUrl, headers}) {\n    this._headers = headers;\n    this._baseUrl = baseUrl;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n  \n  // _checkResponse(res) {\n  //   !res.ok ? Promise.reject(`Ошибка ${res.status}`) : res.json();\n  // }\n\n  getProfile() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    })\n    .then(this._checkResponse)\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    })\n    .then(this._checkResponse)\n  }\n\n  editProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n      name,\n      about\n      })\n    })\n    .then(this._checkResponse)\n  }\n\n  updateAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n      avatar\n      })\n    })\n    .then(this._checkResponse)\n  }\n\n  addCard(name, link){\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    })\n    .then(this._checkResponse)\n  }\n\n  deleteCard(id){\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(this._checkResponse)\n  }\n\n  deleteLike(id){\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(this._checkResponse)\n  }\n\n  addLike(id){\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: 'PUT',\n      headers: this._headers,\n    })\n    .then(this._checkResponse)\n  }\n}\n\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-39',\n  headers: {\n    authorization: '02c148a3-ef23-4baa-b389-8cb95ba5fa76',\n    'Content-Type': 'application/json'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}